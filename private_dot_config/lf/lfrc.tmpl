# ~/.config/lf/lfrc
# =============================================================================
# lf config file
#
# See:
# - https://github.com/gokcehan/lf
# - https://github.com/gokcehan/lf/blob/master/docs/config.md

# Use relative line numbers
set number
set relativenumber
# Show hidden files
set hidden

# Leave some space at the top and the bottom of the screen
set scrolloff 10

# Use enter for shell commands
map <enter> shell

# Enable column borders
set drawbox

# Disable preivew pane cursor
set cursorpreviewfmt ""

# Add current directory to the zoxide database after changing directory
cmd on-cd &{{ "{{" }}
    zoxide add "$PWD"
{{ "}}" }}

{{ if eq .chezmoi.os "windows" -}}

# Windows specific settings
# -----------------------------------------------------------------------------

# interpreter for shell commands
set shell powershell

# Shell commands with multiline definitions and/or positional arguments and/or
# quotes do not work in Windows. For anything but the simplest shell commands,
# it is recommended to create separate script files and simply call them here
# in commands or mappings.
#
# Also, the default keybindings are defined using cmd syntax (i.e. '%EDITOR%')
# which does not work with powershell. Therefore, you need to override these
# keybindings with explicit choices accordingly.

# change the default open command to work in powerShell
cmd open &start $Env:f

# open the current file in the default editor
map e $& $Env:EDITOR $Env:f

# change the pager used in default pager keybinding
map i $& $Env:PAGER $Env:f

# change the shell used in default shell keybinding
map w $powershell

# change 'doc' command to use a different pager
cmd doc $lf -doc | & $Env:PAGER

# Add a keybind to edit the lf config file
cmd edit-config $~/.config/lf/edit-config.ps1
map C edit-config

{{- else -}}

# MacOS and Linux specific settings
# -----------------------------------------------------------------------------

# interpreter for shell commands
set shell zsh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# Add a keybind to edit the lf config file
cmd edit-config ${{ "{{" }}
    $EDITOR ~/.config/lf/lfrc
    lf -remote "send $id source ~/.config/lf/lfrc"
{{ "}}" }}

map C edit-config
{{- end }}

# vim: ft=conf
